buildscript {
    ext {
        springBootVersion = '1.2.3.RELEASE'
    }
    repositories {
        mavenLocal() //todo remove
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'com.sourcemuse.gradle.plugin:gradle-mongo-plugin:0.4.0'
        classpath 'org.grooscript:grooscript-gradle-plugin:1.1.0-SNAPSHOT'
    }
}

//plugins {
//  id "org.grooscript.conversion" version "1.0.1"
//}

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'war'
apply plugin: 'mongo'
apply plugin: 'org.grooscript.conversion' //todo remove

war {
    baseName = 'demo'
    version = '0.0.6-SNAPSHOT'
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal() //todo remove
    mavenCentral()
}

configurations {
    providedRuntime
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.springframework:spring-messaging")
    compile("org.springframework.boot:spring-boot-starter-groovy-templates")
    compile("org.codehaus.groovy:groovy-all:2.4.3")
    compile("org.grooscript:grooscript:1.1.0-SNAPSHOT") {
        exclude module: "groovy"
        exclude module: "groovy-json"
    }
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    compile 'cglib:cglib-nodep:2.2'
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude module: 'groovy-all'
        exclude module: 'junit-dep'
    }
}

springBoot {
    mainClass = "demo.Application"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

/*
grooscript {
    source = ['src/main/groovy/component']
    destination = 'src/main/resources/static/js/app'
    classPath = ['src/main/groovy']
}

task bookConvertThread(type: org.grooscript.gradle.ThreadTask) {
    source = ['src/main/groovy/demo/model/Book.groovy']
    destination = 'src/main/resources/static/js/app'
    classPath = ['src/main/groovy']
}*/

task templatesListen(type: org.grooscript.gradle.TemplatesThreadTask) {
    templatesPath = 'src/main/resources/templates'
    templates = ['bookList.gtpl', 'bookTable.gtpl', 'lastBook.gtpl']
    destinationFile = 'src/main/resources/static/js/app/Templates.js'
    classPath = ['src/main/groovy']
}

spy {
    files = ['src/main/resources/templates', 'src/main/resources/static/css']
    onChanges = { list ->
        springWebsocketTo 'http://localhost:8080/demo' data 'templates' onChannel '/app/reload'
    }
}

task myRequire(type: org.grooscript.gradle.RequireJsTask) {
    sourceFile = 'src/main/groovy/bookDemo.groovy'
    //sourceFile = 'src/main/groovy/component/Chart.groovy'
    destinationFolder = 'src/main/resources/static/js/app'
    mainContextScope = ['$', 'location']
}

spyChanges.dependsOn templatesListen //, thread, bookConvertThread
bootRun.dependsOn startManagedMongoDb, spyChanges
